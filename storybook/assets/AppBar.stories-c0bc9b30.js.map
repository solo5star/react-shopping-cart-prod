{"version":3,"file":"AppBar.stories-c0bc9b30.js","sources":["../../src/assets/icons/home-icon.svg","../../src/recoil/user/userCartItemsState.ts","../../src/components/page/AppBar.tsx"],"sourcesContent":["export default \"__VITE_ASSET__2ceed860__\"","import { selector } from 'recoil';\nimport type { CartItem } from '../../types/CartItem';\nimport cartItemsState from '../atoms/cartItemsState';\nimport clientState from '../atoms/clientState';\n\nconst userCartItemsState = selector<CartItem[]>({\n  key: 'userCartItemsState',\n  get: ({ get }) => {\n    const client = get(clientState);\n\n    return get(cartItemsState(client));\n  },\n});\n\nexport default userCartItemsState;\n","/* eslint-disable no-nested-ternary */\nimport { useRecoilState, useRecoilValueLoadable } from 'recoil';\nimport { styled } from 'styled-components';\nimport HomeIcon from '../../assets/icons/home-icon.svg';\nimport servers from '../../config/servers';\nimport serverState from '../../recoil/atoms/serverState';\nimport userCartItemsState from '../../recoil/user/userCartItemsState';\nimport userProfileState from '../../recoil/user/userProfileState';\nimport Badge from '../common/Badge';\nimport Spinner from '../common/Spinner';\n\nconst AppBarContainer = styled.header`\n  width: 100%;\n  height: 80px;\n\n  background: #333;\n  color: white;\n`;\n\nconst AppBarContent = styled.div`\n  display: flex;\n  align-items: stretch;\n  justify-content: space-between;\n\n  margin: 0 auto;\n  padding: 0 24px;\n\n  height: 100%;\n  max-width: 1300px;\n`;\n\nconst HomeButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  color: inherit;\n`;\n\nconst HomeButtonText = styled.h1`\n  font-size: 40px;\n  font-weight: 900;\n`;\n\nconst Menu = styled.nav`\n  display: flex;\n  align-items: center;\n  gap: 24px;\n\n  padding: 4px 24px;\n`;\n\nconst MenuButton = styled.button`\n  display: flex;\n  align-items: center;\n  align-self: stretch;\n  gap: 6px;\n\n  font-size: 24px;\n  font-weight: 500;\n`;\n\nconst Selector = styled.select`\n  background-color: transparent;\n`;\n\nconst Option = styled.option`\n  background-color: #333;\n`;\n\nconst MenuProfile = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst MenuProfileUsername = styled.div`\n  font-size: 16px;\n`;\n\nconst MenuProfilePoints = styled.div`\n  font-size: 12px;\n\n  &::after {\n    content: 'P';\n    margin-left: 4px;\n  }\n`;\n\ntype HeaderProps = {\n  onNavigate: (to: string) => void;\n};\n\nconst AppBar = (props: HeaderProps) => {\n  const { onNavigate } = props;\n  const cartItemsLoadable = useRecoilValueLoadable(userCartItemsState);\n  const profileLoadable = useRecoilValueLoadable(userProfileState);\n  const [server, setServer] = useRecoilState(serverState);\n\n  const handleServerChange: React.ChangeEventHandler<HTMLSelectElement> = (event) => {\n    const serverName = event.target.value;\n    const server = servers.find((server) => server.name === serverName)!;\n\n    setServer(server);\n  };\n\n  return (\n    <AppBarContainer>\n      <AppBarContent>\n        <HomeButton onClick={() => onNavigate('/')}>\n          <img alt=\"홈\" src={HomeIcon} width={44} />\n          <HomeButtonText>SHOP</HomeButtonText>\n        </HomeButton>\n\n        <Menu>\n          <Selector onChange={handleServerChange} value={server.name}>\n            {servers.map((server) => (\n              <Option key={server.name} value={server.name}>\n                {server.name}\n              </Option>\n            ))}\n          </Selector>\n\n          <MenuButton onClick={() => onNavigate('/orders')}>주문목록</MenuButton>\n\n          <MenuButton onClick={() => onNavigate('/cart')}>\n            장바구니{' '}\n            {cartItemsLoadable.state === 'hasValue' && (\n              <Badge show={cartItemsLoadable.getValue().length > 0}>\n                {cartItemsLoadable.getValue().length}\n              </Badge>\n            )}\n          </MenuButton>\n\n          {profileLoadable.state === 'loading' ? (\n            <Spinner color=\"currentColor\" />\n          ) : profileLoadable.state === 'hasValue' ? (\n            <MenuProfile>\n              <MenuProfileUsername>{profileLoadable.getValue().username}</MenuProfileUsername>\n              <MenuProfilePoints>{profileLoadable.getValue().currentPoints}</MenuProfilePoints>\n            </MenuProfile>\n          ) : (\n            <MenuButton onClick={() => onNavigate('/login')}>로그인</MenuButton>\n          )}\n        </Menu>\n      </AppBarContent>\n    </AppBarContainer>\n  );\n};\n\nexport default AppBar;\n"],"names":["HomeIcon","userCartItemsState","selector","get","client","clientState","cartItemsState","AppBarContainer","styled","AppBarContent","HomeButton","HomeButtonText","Menu","MenuButton","Selector","Option","MenuProfile","MenuProfileUsername","MenuProfilePoints","AppBar","props","onNavigate","cartItemsLoadable","useRecoilValueLoadable","profileLoadable","userProfileState","server","setServer","useRecoilState","serverState","handleServerChange","event","serverName","server2","servers","server3","jsx","jsxs","Badge","Spinner"],"mappings":"+cAAA,MAAeA,EAAA,GAAA,IAAA,IAAA,yBAAA,YAAA,GAAA,EAAA,KCKTC,EAAqBC,EAAqB,CAC9C,IAAK,qBACL,IAAK,CAAC,CAAE,IAAAC,KAAU,CACV,MAAAC,EAASD,EAAIE,CAAW,EAEvB,OAAAF,EAAIG,EAAeF,CAAM,CAAC,CACnC,CACF,CAAC,ECDDG,EAAAC,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQAC,EAAAD,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYAE,EAAAF,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQAG,EAAAH,EAAA;AAAA;AAAA;AAAA,EAKAI,EAAAJ,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQAK,EAAAL,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUAM,EAAAN,EAAA;AAAA;AAAA,EAIAO,EAAAP,EAAA;AAAA;AAAA,EAIAQ,EAAAR,EAAA;AAAA;AAAA;AAAA;AAAA,EAMAS,EAAAT,EAAA;AAAA;AAAA,EAIAU,EAAAV,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaAW,EAAAC,GAAA,CACE,KAAA,CAAA,WAAAC,CAAA,EAAAD,EACAE,EAAAC,EAAAtB,CAAA,EACAuB,EAAAD,EAAAE,CAAA,EACA,CAAAC,EAAAC,CAAA,EAAAC,EAAAC,CAAA,EAEAC,EAAAC,GAAA,CACE,MAAAC,EAAAD,EAAA,OAAA,MACAE,EAAAC,EAAA,KAAAC,GAAAA,EAAA,OAAAH,CAAA,EAEAL,EAAAM,CAAA,CAAgB,EAGlB,OAAAG,EAAAA,IAAA7B,EAAA,CAAA,SAAA8B,EAAAA,KAAA5B,EAAA,CAAA,SAAA,CAGM4B,EAAA,KAAA3B,EAAA,CAAA,QAAA,IAAAW,EAAA,GAAA,EAAA,SAAA,CACEe,MAAA,MAAA,CAAA,IAAA,IAAA,IAAApC,EAAA,MAAA,GAAA,EAAuCoC,EAAAA,IAAAzB,EAAA,CAAA,SAAA,MAAA,CAAA,CACnB,EAAA,EACtB0B,OAAAzB,EAAA,CAAA,SAAA,CAGEwB,EAAAA,IAAAtB,EAAA,CAAA,SAAAgB,EAAA,MAAAJ,EAAA,KAAA,SAAAQ,EAAA,IAAAD,GAAAG,MAAArB,EAAA,CAAA,MAAAkB,EAAA,KAAA,SAAAA,EAAA,MAAAA,EAAA,IAAA,CAAA,CAAA,CAAA,EAMAG,MAAAvB,EAAA,CAAA,QAAA,IAAAQ,EAAA,SAAA,EAAA,SAAA,OAAA,EAEsDgB,EAAA,KAAAxB,EAAA,CAAA,QAAA,IAAAQ,EAAA,OAAA,EAAA,SAAA,CAEN,OAAA,IACzCC,EAAA,QAAA,YAAAc,EAAA,IAAAE,EAAA,CAAA,KAAAhB,EAAA,SAAA,EAAA,OAAA,EAAA,SAAAA,EAAA,SAAA,EAAA,OAAA,CAIH,EAAA,EAEJE,EAAA,QAAA,UAAAY,EAAA,IAAAG,EAAA,CAAA,MAAA,cAAA,CAAA,EAAAf,EAAA,QAAA,WAAAa,EAAAA,KAAArB,EAAA,CAAA,SAAA,CAMIoB,EAAA,IAAAnB,EAAA,CAAA,SAAAO,EAAA,SAAA,EAAA,SAAA,EAA0DY,EAAA,IAAAlB,EAAA,CAAA,SAAAM,EAAA,SAAA,EAAA,cAAA,CACG,CAAA,CAAA,EAAAY,EAAAA,IAAAvB,EAAA,CAAA,QAAA,IAAAQ,EAAA,QAAA,EAAA,SAAA,MAAA,CAGX,EAAA,CAExD,CAAA,CAAA,CAAA,CAAA,CAIR"}
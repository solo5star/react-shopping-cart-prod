{"version":3,"file":"AppBar.stories-825d5517.js","sources":["../../src/assets/icons/home-icon.svg","../../src/recoil/user/userCartItemsState.ts","../../src/recoil/user/userAuthorizationState.ts","../../src/recoil/user/userProfileState.ts","../../src/components/page/AppBar.tsx"],"sourcesContent":["export default \"__VITE_ASSET__2ceed860__\"","import { selector } from 'recoil';\nimport type { CartItem } from '../../types/CartItem';\nimport cartItemsState from '../atoms/cartItemsState';\nimport clientState from '../atoms/clientState';\n\nconst userCartItemsState = selector<CartItem[]>({\n  key: 'userCartItemsState',\n  get: ({ get }) => {\n    const client = get(clientState);\n\n    return get(cartItemsState(client));\n  },\n});\n\nexport default userCartItemsState;\n","import { selector } from 'recoil';\nimport type { Authorization } from '../../types/Authorization';\nimport authorizationState from '../atoms/authorizationState';\nimport serverState from '../atoms/serverState';\n\nconst userAuthorizationState = selector<Authorization | null>({\n  key: 'userAuthorizationState',\n  get: ({ get }) => {\n    const server = get(serverState);\n    return get(authorizationState(server));\n  },\n  set: ({ get, set }, authorization) => {\n    const server = get(serverState);\n    set(authorizationState(server), authorization);\n  },\n});\n\nexport default userAuthorizationState;\n","import { selector } from 'recoil';\nimport type { Profile } from '../../types/Profile';\nimport clientState from '../atoms/clientState';\nimport profileQuery from '../queries/profileQuery';\nimport userAuthorizationState from './userAuthorizationState';\n\nconst userProfileState = selector<Profile | null>({\n  key: 'userProfileState',\n  get: ({ get }) => {\n    const client = get(clientState);\n    const authorization = get(userAuthorizationState);\n    if (authorization === null) return null;\n\n    const response = get(profileQuery({ client }));\n    const profile = response.acceptOrThrow(200).data;\n    return { ...profile, username: authorization.username };\n  },\n});\n\nexport default userProfileState;\n","import { useRecoilState, useRecoilValueLoadable } from 'recoil';\nimport { styled } from 'styled-components';\nimport HomeIcon from '../../assets/icons/home-icon.svg';\nimport servers from '../../config/servers';\nimport serverState from '../../recoil/atoms/serverState';\nimport userCartItemsState from '../../recoil/user/userCartItemsState';\nimport userProfileState from '../../recoil/user/userProfileState';\nimport Badge from '../common/Badge';\nimport Spinner from '../common/Spinner';\nimport AwaitRecoilState from '../utils/AwaitRecoilState';\n\nconst AppBarContainer = styled.header`\n  width: 100%;\n  height: 80px;\n\n  background: #333;\n  color: white;\n`;\n\nconst AppBarContent = styled.div`\n  display: flex;\n  align-items: stretch;\n  justify-content: space-between;\n\n  margin: 0 auto;\n  padding: 0 24px;\n\n  height: 100%;\n  max-width: 1300px;\n`;\n\nconst HomeButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  color: inherit;\n`;\n\nconst HomeButtonText = styled.h1`\n  font-size: 40px;\n  font-weight: 900;\n`;\n\nconst Menu = styled.nav`\n  display: flex;\n  align-items: center;\n  gap: 24px;\n\n  padding: 4px 24px;\n`;\n\nconst MenuButton = styled.button`\n  display: flex;\n  align-items: center;\n  align-self: stretch;\n  gap: 6px;\n\n  font-size: 24px;\n  font-weight: 500;\n`;\n\nconst Selector = styled.select`\n  background-color: transparent;\n`;\n\nconst Option = styled.option`\n  background-color: #333;\n`;\n\nconst MenuProfile = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst MenuProfileUsername = styled.div`\n  font-size: 16px;\n`;\n\nconst MenuProfilePoints = styled.div`\n  font-size: 12px;\n\n  &::after {\n    content: 'P';\n    margin-left: 4px;\n  }\n`;\n\ntype HeaderProps = {\n  onNavigate: (to: string) => void;\n};\n\nconst AppBar = (props: HeaderProps) => {\n  const { onNavigate } = props;\n  const cartItemsLoadable = useRecoilValueLoadable(userCartItemsState);\n  const [server, setServer] = useRecoilState(serverState);\n\n  const handleServerChange: React.ChangeEventHandler<HTMLSelectElement> = (event) => {\n    const serverName = event.target.value;\n    const server = servers.find((server) => server.name === serverName)!;\n\n    setServer(server);\n  };\n\n  return (\n    <AppBarContainer>\n      <AppBarContent>\n        <HomeButton onClick={() => onNavigate('/')}>\n          <img alt=\"홈\" src={HomeIcon} width={44} />\n          <HomeButtonText>SHOP</HomeButtonText>\n        </HomeButton>\n\n        <Menu>\n          <Selector onChange={handleServerChange} value={server.name}>\n            {servers.map((server) => (\n              <Option key={server.name} value={server.name}>\n                {server.name}\n              </Option>\n            ))}\n          </Selector>\n\n          <MenuButton onClick={() => onNavigate('/orders')}>주문목록</MenuButton>\n\n          <MenuButton onClick={() => onNavigate('/cart')}>\n            장바구니{' '}\n            {cartItemsLoadable.state === 'hasValue' && (\n              <Badge show={cartItemsLoadable.getValue().length > 0}>\n                {cartItemsLoadable.getValue().length}\n              </Badge>\n            )}\n          </MenuButton>\n\n          <AwaitRecoilState\n            state={userProfileState}\n            loadingElement={<Spinner color=\"currentColor\" />}\n          >\n            {(profile) =>\n              profile ? (\n                <MenuProfile>\n                  <MenuProfileUsername>{profile.username}</MenuProfileUsername>\n                  <MenuProfilePoints>{profile.currentPoints}</MenuProfilePoints>\n                </MenuProfile>\n              ) : (\n                <MenuButton onClick={() => onNavigate('/login')}>로그인</MenuButton>\n              )\n            }\n          </AwaitRecoilState>\n        </Menu>\n      </AppBarContent>\n    </AppBarContainer>\n  );\n};\n\nexport default AppBar;\n"],"names":["HomeIcon","userCartItemsState","selector","get","client","clientState","cartItemsState","userAuthorizationState","server","serverState","authorizationState","set","authorization","userProfileState","profileQuery","AppBarContainer","styled","AppBarContent","HomeButton","HomeButtonText","Menu","MenuButton","Selector","Option","MenuProfile","MenuProfileUsername","MenuProfilePoints","AppBar","props","onNavigate","cartItemsLoadable","useRecoilValueLoadable","setServer","useRecoilState","handleServerChange","event","serverName","server2","servers","server3","jsx","jsxs","Badge","AwaitRecoilState","Spinner","profile"],"mappings":"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"}